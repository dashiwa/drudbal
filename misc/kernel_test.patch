diff --git a/core/tests/Drupal/KernelTests/KernelTestBase.php b/core/tests/Drupal/KernelTests/KernelTestBase.php
index 6a35f15..4ee4aa8 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBase.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\KernelTests;
 
+use Drupal\Component\Utility\Timer;
 use Drupal\Component\FileCache\ApcuFileCacheBackend;
 use Drupal\Component\FileCache\FileCache;
 use Drupal\Component\FileCache\FileCacheFactory;
@@ -225,12 +226,18 @@ protected static function getDrupalRoot() {
    * {@inheritdoc}
    */
   protected function setUp() {
+Timer::start('drudbal:install_cli');
     parent::setUp();
+error_log(Timer::read('drudbal:install_cli') . '||TestCase::setup done');
 
     $this->root = static::getDrupalRoot();
+error_log(Timer::read('drudbal:install_cli') . '||getDrupalRoot() done');
     $this->initFileCache();
+error_log(Timer::read('drudbal:install_cli') . '||initFileCache() done');
     $this->bootEnvironment();
+error_log(Timer::read('drudbal:install_cli') . '||bootEnvironment() done');
     $this->bootKernel();
+error_log(Timer::read('drudbal:install_cli') . '||bootKernel() done');
   }
 
   /**
@@ -330,6 +337,7 @@ private function bootKernel() {
     $GLOBALS['conf']['container_service_providers']['test'] = $this;
 
     $modules = self::getModulesToEnable(get_class($this));
+error_log(Timer::read('drudbal:install_cli') . '||getModulesToEnable done');
 
     // Prepare a precompiled container for all tests of this class.
     // Substantially improves performance, since ContainerBuilder::compile()
@@ -341,9 +349,11 @@ private function bootKernel() {
       // PHPUnit's @test annotations are intentionally ignored/not supported.
       return strpos($method->getName(), 'test') === 0;
     }));
+error_log(Timer::read('drudbal:install_cli') . '||$test_method_count done');
 
     // Bootstrap the kernel. Do not use createFromRequest() to retain Settings.
     $kernel = new DrupalKernel('testing', $this->classLoader, FALSE);
+error_log(Timer::read('drudbal:install_cli') . '||new DrupalKernel done');
     $kernel->setSitePath($this->siteDirectory);
     // Boot a new one-time container from scratch. Ensure to set the module list
     // upfront to avoid a subsequent rebuild.
@@ -361,16 +371,20 @@ private function bootKernel() {
     // Ensure database tasks have been run.
     require_once __DIR__ . '/../../../includes/install.inc';
     $connection = Database::getConnection();
+error_log(Timer::read('drudbal:install_cli') . '||Database::getConnection() done');
     $errors = db_installer_object($connection->driver())->runTasks();
     if (!empty($errors)) {
       $this->fail('Failed to run installer database tasks: ' . implode(', ', $errors));
     }
+error_log(Timer::read('drudbal:install_cli') . '||db_installer_object done');
 
     if ($modules) {
       $this->container->get('module_handler')->loadAll();
     }
+error_log(Timer::read('drudbal:install_cli') . '||get(module_handler)->loadAll() done');
 
     $this->container->get('request_stack')->push($request);
+error_log(Timer::read('drudbal:install_cli') . '||get(request_stack)->push($request) done');
 
     // Setup the destion to the be frontpage by default.
     \Drupal::destination()->set('/');
@@ -382,12 +396,14 @@ private function bootKernel() {
       'theme' => [],
       'profile' => '',
     ]);
+error_log(Timer::read('drudbal:install_cli') . '||get(config.storage)->write(core.extension) done');
 
     $settings = Settings::getAll();
     $settings['php_storage']['default'] = [
       'class' => '\Drupal\Component\PhpStorage\FileStorage',
     ];
     new Settings($settings);
+error_log(Timer::read('drudbal:install_cli') . '||new Settings done');
 
     // Manually configure the test mail collector implementation to prevent
     // tests from sending out emails and collect them in state instead.
@@ -615,6 +631,7 @@ protected function tearDown() {
       $this->kernel->shutdown();
     }
 
+error_log(Timer::read('drudbal:install_cli') . '||Before removing tables');
     // Remove all prefixed tables.
     $original_connection_info = Database::getConnectionInfo('simpletest_original_default');
     $original_prefix = $original_connection_info['default']['prefix']['default'];
@@ -660,6 +677,7 @@ protected function tearDown() {
     new Settings([]);
 
     parent::tearDown();
+error_log(Timer::read('drudbal:install_cli') . '||Final');
   }
 
   /**
